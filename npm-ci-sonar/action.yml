name: NPM CI SonarQube
description: NPM Continuous Integration SonarQube action

inputs:
  node-version:
    description: 'Version Spec to use. Examples: 18, 18.x, 18.0.0, 18.0.x, 18.0.0-x, 18.0.0-x64.'
    required: false
  matrix-node-version:
    description: 'Version Spec array, i.e. from matrix.node-version. Latest will be selected from this array and setup-node will be run with the selected version.'
    required: false
  matrix-node-version-earliest:
    description: 'Set this option if you want the action to select for the earliest available version that satisfies the version spec.'
    default: 'false'
  install-script:
    description: 'Bash script to run after setting up Node.js.'
    default: 'npm ci'
  run-script:
    description: 'Bash script to run after setting up Node.js.'
    default: npm run coverage
  cache-additional-path:
    description: 'Additional paths to cache. This is a multi-line list of paths.'
  cache-reset:
    description: 'Delete the cache if it exists to cache the new one.'
    default: 'false'
  cache-dependency-path:
    description: 'Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.'
    default: '**/package-lock.json'
  working-directory:
    description: 'The working directory which contains the **/package-lock.json files'
    default: '.'
  sonar-token:
    description: 'SonarQube token to use for authentication.'
  fail-on-empty-token:
    description: 'Fail if the token is empty.'
    default: 'false'

runs:
  using: 'composite'
  steps:
    - id: do-sonar
      shell: bash
      run: |
        if [[ -z "${{ inputs.sonar-token }}" ]]; then
          echo "sonar-token is not set. No SonarQube scan will be performed."
          if [[ "${{ inputs.fail-on-empty-token }}" == "true" ]]; then
            echo "Failing because sonar-token is not set"
            exit 1
          fi
          echo "result=false" >> "$GITHUB_OUTPUT"
        else
          echo "sonar-token is set. Performing SonarQube scan."
          echo "result=true" >> "$GITHUB_OUTPUT"
        fi

    - uses: actions/checkout@v4
      if: steps.do-sonar.outputs.result == 'true'

    - uses: kt-workflows/actions/npm-run-script@main
      if: steps.do-sonar.outputs.result == 'true'
      with:
        node-version: ${{ inputs.node-version }}
        matrix-node-version: ${{ inputs.matrix-node-version }}
        matrix-node-version-earliest: ${{ inputs.matrix-node-version-earliest }}
        install-script: ${{ inputs.install-script }}
        run-script: ${{ inputs.run-script }}
        cache-additional-path: ${{ inputs.cache-additional-path }}
        cache-reset: ${{ inputs.cache-reset }}
        cache-dependency-path: ${{ inputs.cache-dependency-path }}
        working-directory: ${{ inputs.working-directory }}

    - uses: sonarsource/sonarqube-scan-action@v5
      if: steps.do-sonar.outputs.result == 'true'
      env:
        SONAR_TOKEN: ${{ inputs.sonar-token }}
