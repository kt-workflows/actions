name: NPM dependencies cache key
description: Generate cache key for the npm-run-script action, under which dependencies (e.g. node_modules and additional paths) are stored.

inputs:
  node-version:
    description: The Node.js version used in the workflow
    required: true
  install-script:
    description: The install script used in the workflow
  working-directory:
    description: The working directory which contains the '**/package-lock.json' files
    default: '.'

outputs:
  key:
    description: The generated cache key
    value: ${{ steps.cache-key.outputs.key }}

runs:
  using: 'composite'
  steps:
    - id: install-script-hash
      if: ${{ inputs.install-script != '' }}
      uses: pplanel/hash-calculator-action@v1.3.2
      with:
        input: ${{ inputs.install-script }}
        method: 'SHA256'

    - id: cache-key
      run: |
        # Check that the 'instll-script-hash' has the return value, if not, set intermediate value to 'no-install-script-hash'
        if [ -z "${{ steps.install-script-hash.outputs.digest }}" ]; then
          echo "install-script-hash.outputs.digest is empty, setting INSTALL_SCRIPT_HASH value to 'no-install-script-hash'"
          INSTALL_SCRIPT_HASH="no-install-script-hash"
        else
          echo "install-script-hash.outputs.digest is not empty, setting INSTALL_SCRIPT_HASH value to '${{ steps.install-script-hash.outputs.digest }}'"
          INSTALL_SCRIPT_HASH="${{ steps.install-script-hash.outputs.digest }}"
        fi

        echo "key=node-cache-dependencies-${{ runner.os }}-${{ runner.arch }}-node-${{ inputs.node-version }}-${{ hashFiles(format('{0}/**/package-lock.json', inputs.working-directory)) }}-$INSTALL_SCRIPT_HASH" >> $GITHUB_ENV
      shell: bash

    - run: 'echo "Generated cache key: ${{ steps.cache-key.outputs.key }}"'
      shell: bash
